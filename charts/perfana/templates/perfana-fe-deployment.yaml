{{- if .Values.perfanaFe.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: perfana-fe
  labels:
    app: perfana-fe
    chart: {{ include "perfana.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.perfanaFe.replicaCount }}
  selector:
    matchLabels:
      app: perfana-fe
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.perfanaFe.deploymentStrategy }}
  {{- if ne .Values.perfanaFe.deploymentStrategy "RollingUpdate" }}
    rollingUpdate: null
  {{- end }}
  template:
    metadata:
      labels:
        app: perfana-fe
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.perfanaFe.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.perfanaFe.serviceAccount.name }}
      {{- end}}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: perfana-fe
          image: "{{ .Values.perfanaFe.image.repository }}:{{ .Values.perfanaFe.image.tag }}"
          imagePullPolicy: {{ .Values.perfanaFe.image.pullPolicy }}
          ports:
            - name: {{ .Values.perfanaFe.service.targetPort }}
              containerPort: {{ .Values.perfanaFe.service.port }}
              protocol: TCP
          livenessProbe:
           failureThreshold: 8
           httpGet:
            path: /perfana
            port: 3000
            scheme: HTTP
           initialDelaySeconds: 45
           periodSeconds: 10
           successThreshold: 1
           timeoutSeconds: 5
          readinessProbe:
           failureThreshold: 3
           httpGet:
            path: /perfana
            port: 3000
            scheme: HTTP
           initialDelaySeconds: 45
           periodSeconds: 10
           successThreshold: 1
           timeoutSeconds: 5
          env: # ENV variables for your project
            {{- if .Values.perfanaFe.setEnvSpringDataMongoDBURI }}
            - name: SPRING_DATA_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  key: MONGO_URL
                  {{- if not .Values.existingSecret.mongoUrl }}
                  name: mongo-url
                  {{- else }}
                  name: {{ .Values.existingSecret.mongoUrl }}
                  {{- end }}
            {{- end }}
            - name: MONGO_URL
              valueFrom:
                secretKeyRef:
                  key: MONGO_URL
                  {{- if not .Values.existingSecret.mongoUrl }}
                  name: mongo-url
                  {{- else }}
                  name: {{ .Values.existingSecret.mongoUrl }}
                  {{- end }}
            - name: MONGO_OPLOG_URL
              valueFrom:
                secretKeyRef:
                   key: MONGO_OPLOG_URL
                  {{- if not .Values.existingSecret.mongoOplogUrl }}
                   name: mongo-oplog-url
                  {{- else }}
                   name: {{ .Values.existingSecret.mongoOplogUrl }}
                  {{- end }}
            - name: METEOR_SETTINGS
              valueFrom:
                secretKeyRef:
                   key: METEOR_SETTINGS
                  {{- if not .Values.existingSecret.meteorSettings }}
                   name: meteor-settings
                  {{- else }}
                   name: {{ .Values.existingSecret.meteorSettings }}
                  {{- end }}
        {{- range $key, $value := .Values.perfanaFe.env }}
            - name: {{ $key }}
              value: '{{ $value }}'
        {{- end }}
          resources:
{{ toYaml .Values.perfanaFe.resources | indent 12 }}
    {{- with .Values.perfanaFe.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.perfanaFe.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.perfanaFe.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}
